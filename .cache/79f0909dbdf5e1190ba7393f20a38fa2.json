{"dependencies":[{"name":"/Users/rou/dark/tsconfig.json","includedInParent":true,"mtime":1523518036678},{"name":"/Users/rou/dark/.babelrc","includedInParent":true,"mtime":1523349617494},{"name":"/Users/rou/dark/package.json","includedInParent":true,"mtime":1523514855270},{"name":"/Users/rou/dark/.browserslistrc","includedInParent":true,"mtime":1523413376417},{"name":"./firstUpperCase","loc":{"line":6,"column":49}}],"generated":{"js":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar firstUpperCase_1 = __importDefault(require(\"./firstUpperCase\"));\nvar it = function it(type) {\n    return function (target) {\n        return Object.prototype.toString.call(target) === \"[object \" + firstUpperCase_1.default(type) + \"]\";\n    };\n};\nexports.default = it;","map":{"mappings":[{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":23}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":39}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":47}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":65}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":66}},{"source":"utils/is.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":67}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":8,"column":4}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":55},"generated":{"line":8,"column":9}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":8,"column":18}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":55},"generated":{"line":8,"column":20}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":65},"generated":{"line":8,"column":21}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":55},"generated":{"line":8,"column":25}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":69},"generated":{"line":8,"column":27}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":9,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":9,"column":11}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":19},"generated":{"line":9,"column":21}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":9,"column":27}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":25},"generated":{"line":9,"column":29}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":10,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":15}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":10,"column":22}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":31}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":10,"column":32}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":40}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":37},"generated":{"line":10,"column":41}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":45}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":10,"column":46}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":52}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":65},"generated":{"line":10,"column":71}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":65},"generated":{"line":10,"column":88}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":65},"generated":{"line":10,"column":95}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":80},"generated":{"line":10,"column":96}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":65},"generated":{"line":10,"column":100}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":10,"column":101}},{"source":"utils/is.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":10,"column":107}},{"source":"utils/is.ts","name":null,"original":{"line":11,"column":3},"generated":{"line":11,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":5}},{"source":"utils/is.ts","name":null,"original":{"line":12,"column":1},"generated":{"line":12,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":12,"column":1}},{"source":"utils/is.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":13,"column":0}},{"source":"utils/is.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":13,"column":8}},{"source":"utils/is.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":13,"column":15}},{"source":"utils/is.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":13,"column":18}},{"source":"utils/is.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":13,"column":20}}],"sources":{"utils/is.ts":"import firstUpperCase from './firstUpperCase'\n\n/**\n * 类型判断的工厂函数\n * @param type {string} 要生成的类型判断函数\n * @returns {Function} 生成的类型判断函数\n */\nconst it: (type: string) => ((args: any) => boolean) = function (type) {\n  return function (target) {\n    return Object.prototype.toString.call(target) === `[object ${firstUpperCase(type)}]`\n  }\n}\n\nexport default it\n"},"lineCount":null}},"hash":"3d296b8cfba277004164b0a6a441c4b3","cacheData":{"env":{}}}